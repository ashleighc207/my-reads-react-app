{"version":3,"sources":["BooksAPI.js","components/BookShelf/BookShelf.js","components/Search/Search.js","containers/App/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","BookShelf","wantToRead","currentlyReading","read","this","props","myBooks","handleChange","filter","className","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","event","disabled","title","authors","to","Component","Search","state","results","error","target","setState","BooksAPI","length","updateBooks","currentBooks","forEach","myBook","type","placeholder","BooksApp","console","log","e","exact","path","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.d6260f56.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../../BooksAPI\";\n\nclass BookShelf extends Component {\n  render() {\n    const { myBooks, handleChange } = this.props;\n    let wantToRead, currentlyReading, read;\n\n    currentlyReading = myBooks.filter(book => book.shelf == \"currentlyReading\");\n    wantToRead = myBooks.filter(book => book.shelf == \"wantToRead\");\n    read = myBooks.filter(book => book.shelf == \"read\");\n\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {currentlyReading.map(book => (\n                    <li key={book.id} className=\"books-grid\">\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div\n                            className=\"book-cover\"\n                            style={{\n                              width: 128,\n                              height: 193,\n                              backgroundImage:\n                                \"url(\" + `${book.imageLinks.thumbnail}` + \")\"\n                            }}\n                          ></div>\n                          <div className=\"book-shelf-changer\">\n                            <select\n                              value={book.shelf}\n                              onChange={event =>\n                                this.props.handleChange(book, event)\n                              }\n                            >\n                              <option value=\"move\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.authors}</div>\n                      </div>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {wantToRead.map(book => (\n                    <li key={book.id} className=\"books-grid\">\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div\n                            className=\"book-cover\"\n                            style={{\n                              width: 128,\n                              height: 193,\n                              backgroundImage:\n                                \"url(\" + `${book.imageLinks.thumbnail}` + \")\"\n                            }}\n                          ></div>\n                          <div className=\"book-shelf-changer\">\n                            <select\n                              value={book.shelf}\n                              onChange={event =>\n                                this.props.handleChange(book, event)\n                              }\n                            >\n                              <option value=\"move\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.authors}</div>\n                      </div>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Read</h2>\n              <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                  {read.map(book => (\n                    <li key={book.id} className=\"books-grid\">\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div\n                            className=\"book-cover\"\n                            style={{\n                              width: 128,\n                              height: 193,\n                              backgroundImage:\n                                \"url(\" + `${book.imageLinks.thumbnail}` + \")\"\n                            }}\n                          ></div>\n                          <div className=\"book-shelf-changer\">\n                            <select\n                              value={book.shelf}\n                              onChange={event =>\n                                this.props.handleChange(book, event)\n                              }\n                            >\n                              <option value=\"move\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.authors}</div>\n                      </div>\n                    </li>\n                  ))}\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"/search\">Add a book</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookShelf;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as BooksAPI from \"../../BooksAPI\";\nimport escapeRegExp from \"escape-string-regexp\";\nimport sortBy from \"sort-by\";\n\nclass Search extends Component {\n  state = {\n    query: \"\",\n    results: [],\n    error: false\n  };\n\n  search = event => {\n    let error = \"\",\n      results = [];\n    let query = event.target.value;\n\n    this.setState({ query });\n\n    if (query) {\n      BooksAPI.search(query).then(books => {\n        if (books.length > 0) {\n          this.updateBooks(books);\n        } else {\n          this.setState({ error: true });\n        }\n      });\n    } else {\n      this.setState({ results: [], error: false });\n    }\n  };\n\n  updateBooks(books) {\n    const currentBooks = books.map(book => {\n      book.shelf = \"none\";\n      this.props.myBooks.forEach(myBook => {\n        if (book.id === myBook.id) {\n          book.shelf = myBook.shelf;\n        }\n      });\n      if (!book.imageLinks) {\n        book.imageLinks = {\n          thumbnail:\n            \"https://cohenwoodworking.com/wp-content/uploads/2016/09/300x500.gif\"\n        };\n      }\n      return book;\n    });\n\n    this.setState({\n      results: currentBooks\n    });\n  }\n\n  render() {\n    const { myBooks, handleChange } = this.props;\n    const { query, results, error } = this.state;\n\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\" className=\"close-search\">\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by title or author\"\n              value={this.state.query}\n              onChange={event => this.search(event)}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n            {!query && <li>To search for a new book, type in your keyword</li>}\n            {!error &&\n              results.map(book => (\n                <li key={book.id} className=\"books-grid\">\n                  <div className=\"book\">\n                    <div className=\"book-top\">\n                      <div\n                        className=\"book-cover\"\n                        style={{\n                          width: 128,\n                          height: 193,\n                          backgroundImage:\n                            \"url(\" + `${book.imageLinks.thumbnail}` + \")\"\n                        }}\n                      ></div>\n                      <div className=\"book-shelf-changer\">\n                        <select\n                          value={book.shelf}\n                          onChange={event =>\n                            this.props.handleChange(book, event)\n                          }\n                        >\n                          <option value=\"move\" disabled>\n                            Move to...\n                          </option>\n                          <option value=\"currentlyReading\">\n                            Currently Reading\n                          </option>\n                          <option value=\"wantToRead\">Want to Read</option>\n                          <option value=\"read\">Read</option>\n                          <option value=\"none\">None</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{book.title}</div>\n                    <div className=\"book-authors\">{book.authors}</div>\n                  </div>\n                </li>\n              ))}\n            {error && (\n              <li>\n                Sorry, no results found. Please try a different search term\n              </li>\n            )}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport * as BooksAPI from \"../../BooksAPI\";\nimport \"./App.css\";\nimport { BookShelf, Search } from \"../../components\";\nimport { Route } from \"react-router-dom\";\n\nclass BooksApp extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => {\n      this.setState({ books });\n    });\n  }\n\n  handleChange = (book, event) => {\n    console.log(this.state);\n    let e = event.target.value;\n    BooksAPI.update(book, e).then(res => {\n      book.shelf = e;\n      this.updateBooks();\n    });\n  };\n\n  updateBooks() {\n    BooksAPI.getAll().then(books => {\n      this.setState({ books });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <BookShelf\n              myBooks={this.state.books}\n              handleChange={this.handleChange}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/search\"\n          render={() => (\n            <Search\n              myBooks={this.state.books}\n              handleChange={this.handleChange}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { App } from \"./containers\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/my-reads-react-app\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}