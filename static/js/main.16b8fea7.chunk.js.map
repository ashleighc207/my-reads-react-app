{"version":3,"sources":["BooksAPI.js","BookShelf.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","BookShelf","wantToRead","currentlyReading","read","this","props","myBooks","handleChange","filter","className","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","event","disabled","title","authors","to","Component","Search","state","results","error","target","setState","BooksAPI","length","updateBooks","currentBooks","forEach","myBook","type","placeholder","BooksApp","console","log","e","exact","path","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.16b8fea7.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\n\n\nclass BookShelf extends Component {\n    render() {\n        const { myBooks, handleChange } = this.props;\n        let wantToRead, currentlyReading, read;\n        \n        currentlyReading = myBooks.filter((book) => book.shelf == 'currentlyReading')\n        wantToRead = myBooks.filter((book) => book.shelf == 'wantToRead')\n        read = myBooks.filter((book) => book.shelf == 'read')\n\n        return(\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {currentlyReading.map((book) => (\n                        <li key={book.id} className='books-grid'>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: \"url(\" + `${book.imageLinks.thumbnail}` + \")\" }}></div>\n                            <div className=\"book-shelf-changer\">\n                              <select value={book.shelf} onChange={(event) => this.props.handleChange(book, event)}>\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"book-title\">{book.title}</div>\n                          <div className=\"book-authors\">{book.authors}</div>\n                        </div>\n                        </li>\n            ))}\n                    </ol>\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {wantToRead.map((book) => (\n                        <li key={book.id} className='books-grid'>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: \"url(\" + `${book.imageLinks.thumbnail}` + \")\" }}></div>\n                            <div className=\"book-shelf-changer\">\n                              <select value={book.shelf} onChange={(event) => this.props.handleChange(book, event)}>\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"book-title\">{book.title}</div>\n                          <div className=\"book-authors\">{book.authors}</div>\n                        </div>\n                        </li>\n            ))}\n                    </ol>\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                    {read.map((book) => (\n                        <li key={book.id} className='books-grid'>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: \"url(\" + `${book.imageLinks.thumbnail}` + \")\" }}></div>\n                            <div className=\"book-shelf-changer\">\n                              <select value={book.shelf} onChange={(event) => this.props.handleChange(book, event)}>\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"book-title\">{book.title}</div>\n                          <div className=\"book-authors\">{book.authors}</div>\n                        </div>\n                        </li>\n            ))}\n                    </ol>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <Link to=\"/search\">Add a book</Link>\n            </div>\n          </div>    \n        )\n    }\n}\n\nexport default BookShelf","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport escapeRegExp from 'escape-string-regexp'\nimport sortBy from 'sort-by'\n\nclass Search extends Component {\n    state = {\n        query: '',\n        results: [],\n        error: false\n    }\n    \n    search = (event) => {\n        let error = '', results = [];\n        let query = event.target.value;\n        \n        this.setState({ query })\n        \n        if (query){\n            BooksAPI.search(query).then((books) => {\n                if (books.length > 0){\n                     this.updateBooks(books);\n                } else {\n                    this.setState({error: true})\n                }\n            })\n        } else {\n            this.setState({results: [], error: false})\n        }\n    }\n    \n      updateBooks(books) {\n        const currentBooks = books.map(book => {\n            book.shelf = 'none';\n          this.props.myBooks.forEach(myBook => {\n            if (book.id === myBook.id) {\n              book.shelf = myBook.shelf;\n            } \n          });\n          if(!book.imageLinks){\n              book.imageLinks = {thumbnail: 'https://cohenwoodworking.com/wp-content/uploads/2016/09/300x500.gif'}\n          }\n          return book;\n        });\n        \n        this.setState({\n          results: currentBooks\n        });\n        \n      }\n    \n    \n    render() {\n        const { myBooks, handleChange } = this.props\n        const { query, results, error } = this.state\n        \n        return (\n            <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <Link to=\"/\" className=\"close-search\">Close</Link>\n              <div className=\"search-books-input-wrapper\">\n                <input \n                type=\"text\" \n                placeholder=\"Search by title or author\" \n                value={this.state.query}\n                onChange={(event) => this.search(event)}\n                />\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n             <ol className=\"books-grid\">\n             {!query &&\n                 <li>\n                    To search for a new book, type in your keyword\n                </li>\n             }\n            {!error && results.map((book) => (\n                        <li key={book.id} className='books-grid'>\n                        <div className=\"book\">\n                          <div className=\"book-top\">\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: \"url(\" + `${book.imageLinks.thumbnail}` + \")\" }}></div>\n                            <div className=\"book-shelf-changer\">\n                              <select value={book.shelf} onChange={(event) => this.props.handleChange(book, event)}>\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"book-title\">{book.title}</div>\n                          <div className=\"book-authors\">{book.authors}</div>\n                        </div>\n                        </li>\n            ))}\n            {error &&\n                <li>\n                    Sorry, no results found. Please try a different search term\n                </li>\n            }\n             </ol>\n            </div>\n          </div> \n        )\n    }\n}\n\nexport default Search","import React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport BookShelf from './BookShelf.js'\nimport Search from './Search.js'\nimport { Route } from 'react-router-dom'\n\nclass BooksApp extends Component {\n  state = {\n    books: []\n  }\n\n  componentDidMount(){\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books })\n    })\n  }\n  \n  handleChange = (book, event) => {\n    console.log(this.state)\n    let e = event.target.value;\n    BooksAPI.update(book, e).then(res => {\n      book.shelf = e;\n      this.updateBooks();\n    })\n  }\n  \n  updateBooks(){\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books })\n    })\n  }\n  \n  \n  render() {\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={() => (\n          <BookShelf\n            myBooks={this.state.books}\n            handleChange={this.handleChange}\n          />\n        )}/>\n        <Route exact path='/search' render={() => (\n          <Search\n            myBooks={this.state.books}\n            handleChange={this.handleChange}\n          />\n        )}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter basename=\"/my-reads-react-app\"><App /></BrowserRouter>, \n    document.getElementById('root')\n)\n"],"sourceRoot":""}